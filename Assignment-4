// Storing Matrix
#include<iostream>
#include<string.h>
using namespace std;

class Matrix
{
public:
    int i,j;
    int a[3][3],b[3][3];
    void accept(int,int);
    void display(int,int);
    void transpose(int,int);
    void trace(int,int);
    void upper(int,int);
};

void Matrix::accept(int r, int c)
{
    cout<<"Matrix 1 : "<<endl;
    for(i=1;i<=r;i++)
    {
        cout<<"Enter row "<<i<<":"<<endl;
        for(j=1;j<=c;j++)
        {
            cout<<"Enter column "<<i<<" element "<<j<<" = ";
            cin>>a[i][j];
        }
    }

    cout<<"Matrix 2 : "<<endl;
    for(i=1;i<=r;i++)
    {
        cout<<"Enter row "<<i<<":"<<endl;
        for(j=1;j<=c;j++)
        {
            cout<<"Enter column "<<i<<" element "<<j<<" = ";
            cin>>b[i][j];
        }
    }
}

void Matrix::display(int r, int c)
{
    cout<<"Matrix 1 = "<<endl;
    for(i=1;i<=r;i++)
    {
        for(j=1;j<=c;j++)
        {
            cout<<" "<<a[i][j]<<" ";
        }
        cout<<endl;
    }

    cout<<"Matrix 2 = "<<endl;
    for(i=1;i<=r;i++)
    {
        for(j=1;j<=c;j++)
        {
            cout<<" "<<b[i][j]<<" ";
        }
        cout<<endl;
    }

}


void Matrix::transpose(int r,int c)
{
    cout<<"Transpose of the matrix 1 is: "<<endl;
    for(i=1;i<=c;i++)
    {
        for(j=1;j<=r;j++)
        {
            cout<<" "<<a[j][i];
        }
        cout<<endl;
    }
}


void Matrix::trace(int r,int c)
{
    int d1=0,d2=0;
    if(r==c)
    {
        for(i=1;i<=r;i++)
        {
            for(j=1;j<=c;j++)
            {
                if(i==j)
                {
                    d1=d1+a[i][j];
                }
            }
        }
    }
    cout<<"Trace of the matrix 1 is: "<<d1<<endl;

}

void Matrix::upper(int r,int c)
{
     int flag = 0;
    if(r==c)
    {
        for(i=1;i<=r;++i)
        {
            for(j=1;j<=c;++j)
            {
                if (j<i)
                {
                    if (a[i][j] == 0)
                        continue;
                    else
                    {
                        cout<<"not UT"<<endl;
                        flag =1;
                        break;
                    }
                }
                else
                {
                    if (a[i][j] != 0)
                      continue;
                    else
                    {
                        cout<<"not UT"<<endl;
                        flag = 1;
                        break;
                    }
                }

            }
            if (flag ==1)
                break;
        }
        if(i==(r+1)&&j==(c+1))
            cout<<"UT"<<endl;

    }
}


int main()
{
    Matrix m1,m2,m3;
    int r,c,ch;
    cout<<"Enter value for row = ";
    cin>>r;
    cout<<"Enter value for col = ";
    cin>>c;
    m1.accept(r,c);
    cout<<endl;
    do
    {
        cout<<"1.Display  2.Upper  3.Trace  4.Transpose  5.Exit"<<endl;
        cout<<"Enter choice = ";
        cin>>ch;
        if(ch==5)
        {
            break;
        }
        switch(ch)
        {
        case 1:
            {
                m1.display(r,c);
                //m2.display(r,c);
                break;
            }
        case 2:
            {
                m1.upper(r,c);
                break;
            }
        case 3:
            {
                m1.trace(r,c);
                break;
            }
        case 4:
            {
                m1.transpose(r,c);
                break;
            }
        default:
            {
                cout<<"Invalid Input"<<endl;
                break;
            }
        }
    } while(ch<5);
    return 0;
}
